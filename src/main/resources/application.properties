spring.application.name=todo-cloud-kafka-func
spring.cloud.function.definition=orderStateStoreProcessor;orderProcess;inventoryCheck;shipping;shippedConsumer
spring.cloud.stream.bindings.orderStateStoreProcessor-in-0.destination=todo-cloud-kafka-func.orderStatus
spring.cloud.stream.bindings.orderStateStoreProcessor-out-0.destination=todo-cloud-kafka-func.orderProcess
spring.cloud.stream.bindings.orderProcess-in-0.destination=todo-cloud-kafka-func.orderProcess
spring.cloud.stream.bindings.orderProcess-out-0.destination=todo-cloud-kafka-func.inventoryCheck
spring.cloud.stream.bindings.orderProcess-out-1.destination=todo-cloud-kafka-func.shipping
spring.cloud.stream.bindings.orderProcess-out-2.destination=todo-cloud-kafka-func.shipped
spring.cloud.stream.bindings.inventoryCheck-in-0.destination=todo-cloud-kafka-func.inventoryCheck
spring.cloud.stream.bindings.inventoryCheck-out-0.destination=todo-cloud-kafka-func.orderStatus
spring.cloud.stream.bindings.shipping-in-0.destination=todo-cloud-kafka-func.shipping
spring.cloud.stream.bindings.shipping-out-0.destination=todo-cloud-kafka-func.orderStatus
spring.cloud.stream.bindings.shippedConsumer-in-0.destination=todo-cloud-kafka-func.shipped
spring.cloud.stream.kafka.streams.bindings.orderStateStoreProcessor-in-0.consumer.configuration.application.id=${spring.application.name}-orderStateStoreProcessor
spring.cloud.stream.kafka.streams.bindings.orderProcess-in-0.consumer.configuration.application.id=${spring.application.name}-orderProcess
spring.cloud.stream.kafka.streams.bindings.inventoryCheck-in-0.consumer.configuration.application.id=${spring.application.name}-inventoryCheck
spring.cloud.stream.kafka.streams.bindings.shipping-in-0.consumer.configuration.application.id=${spring.application.name}-shipping
spring.cloud.stream.kafka.streams.bindings.shippedConsumer-in-0.consumer.configuration.application.id=${spring.application.name}-shipped
spring.cloud.stream.kafka.streams.binder.brokers=localhost:9092
spring.cloud.stream.kafka.streams.binder.auto-add-partitions=true
spring.cloud.stream.kafka.streams.binder.min-partition-count=6
spring.cloud.stream.kafka.streams.binder.state-store-retry.max-attempts=10
spring.cloud.stream.kafka.streams.binder.state-store-retry.backoff-period=500
spring.cloud.stream.kafka.streams.binder.configuration.application.id=${spring.application.name}
spring.cloud.stream.kafka.streams.binder.configuration.application.server=localhost:8080
spring.cloud.stream.kafka.streams.binder.configuration.state.dir=state-${spring.application.name}-${server.port}
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$UUIDSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.kafka.streams.binder.configuration.auto.offset.reset=latest
logging.level.com.apress.todo.todocloudkafkafunc=debug

